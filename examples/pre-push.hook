#!/bin/zsh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>

remote="$1"
url="$2"

IFS=' '
while read local_ref local_sha remote_ref remote_sha
do
    ## only check the build light if we're pushing to the exact
    ## branch and repo that jenkins monitors
    if [[ $remote_ref == "master" && $url == *github.com:myAwesomeProject ]] 
    then
        echo "I see you're attempting to push to master. I'll check jenkins for you."
        rick <jenkinsUrl> <jobName>; unsafe=$?
        if [[ unsafe -gt 0 ]]
        then
            echo "Warning: the build is RED! You should only push if you're trying to fix the build."
            echo "If you still want to push, you can run 'git push --no-verify origin HEAD'."
            exit 1
        else
            echo "The build is green, carry on."
            exit 0
        fi
    fi
done

exit 0
